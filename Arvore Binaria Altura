#include <stdio.h>
#include <stdlib.h>

struct noArvovre{
  char Raiz;
  struct noArvovre* esq;
  struct noArvovre* dir;
};

typedef struct noArvovre no;

no* criar_no(char Raiz,no* esq, no* dir)
{
	no* n = malloc(sizeof(no));
	n->Raiz = Raiz;
	n->esq = esq;
	n->dir = dir;
return n;
}


void imprimirArv(no* n)
{
	if (n !=NULL){
	printf("%c", n->Raiz );
	imprimirArv(n->esq);
	imprimirArv(n->dir);
    }
}


int buscaValor (no* n, char valor)
{

if(n == NULL){
   return 0;
   }else{

    return (n->Raiz == valor) || (buscaValor(n->esq, valor)) || (buscaValor(n->dir, valor));
   }

}

void main()
{
	no* nono = criar_no('d',criar_no(('b'),criar_no('a',NULL,NULL),criar_no('c',NULL,NULL)), criar_no(('f'),criar_no('e',NULL,NULL),criar_no('g',NULL,NULL)));
	
	printf("\n Altura da arvore = ");
	
	printf("%d", altura(nono));
	
	
}

int maior(int a, int b){
    if(a > b)
        return a;
    else
        return b;       
}

int altura(no* Raiz){
	if((Raiz == NULL) || (Raiz->esq == NULL && Raiz->dir == NULL))
		return 0;
	else	
		return 1 + maior(altura(Raiz->esq), altura(Raiz->dir));		
}


